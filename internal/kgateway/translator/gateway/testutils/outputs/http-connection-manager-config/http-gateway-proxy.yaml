apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: gateway-envoyfilter
  namespace: default
spec:
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
      patch:
        operation: MERGE
        value:
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            use_remote_address: true
            xff_num_trusted_hops: 2
            server_header_transformation: APPEND_IF_ABSENT
            stream_idle_timeout: 300s
            route_config:
              name: default
              virtual_hosts:
                - name: default
                  domains: ["*"]
                  routes:
                    - match:
                        prefix: /api
                      route:
                        cluster: example-service.default.svc.cluster.local:8080

Listeners:
  - address:
      socketAddress:
        address: '::'
        ipv4Compat: true
        portValue: 8080
    filterChains:
      - filters:
          - name: envoy.filters.network.http_connection_manager
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              httpFilters:
                - name: envoy.filters.http.router
                  typedConfig:
                    '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              mergeSlashes: true
              normalizePath: true
              rds:
                configSource:
                  ads: {}
                  resourceApiVersion: V3
                routeConfigName: http
              serverHeaderTransformation: APPEND_IF_ABSENT
              statPrefix: http
              streamIdleTimeout: 300s
              useRemoteAddress: true
              xffNumTrustedHops: 2
        name: http
    name: http
Routes:
  - ignorePortInHostMatching: true
    name: http
    virtualHosts:
      - domains:
          - '*'
        name: http~*
        routes:
          - match:
              pathSeparatedPrefix: /api
            name: http~*-route-0-httproute-example-route-default-0-0-matcher-0
            route:
              cluster: blackhole-cluster
              clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR 